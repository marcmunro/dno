<?xml version='1.0'?>

<!DOCTYPE book [

<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">

<!ENTITY % dbcent PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN"
   "docbook_entities.sgml">
%dbcent;

<!ENTITY appendix_dno	       		SYSTEM "parts/dno.xml">
<!ENTITY appendix_dno_bpp      		SYSTEM "parts/dno_bpp.xml">
<!ENTITY appendix_dno_checksize		SYSTEM "parts/dno_checksize.xml">
<!ENTITY appendix_dno_commands_for	SYSTEM "parts/dno_commands_for.xml">
<!ENTITY appendix_dno_dirinfo		SYSTEM "parts/dno_dirinfo.xml">
<!ENTITY appendix_dno_menu		SYSTEM "parts/dno_menu.xml">
<!ENTITY appendix_dno_requote		SYSTEM "parts/dno_requote.xml">
<!ENTITY appendix_BOARD_INFO		SYSTEM "parts/BOARD_INFO.xml">
<!ENTITY appendix_BOARD_TYPE		SYSTEM "parts/BOARD_TYPE.xml">
<!ENTITY appendix_BOARD_OPTIONS		SYSTEM "parts/BOARD_OPTIONS.xml">
<!ENTITY appendix_LICENSE		SYSTEM "LICENSE.dbk">
         
]>

<book id="dno_user_guide">
  <title><command>DNO</command> USER GUIDE</title>
  <subtitle>
    The <command>dno</command> command-line build system for Arduino
    software
  </subtitle>
  <preface id="introduction">
    <title>Introduction to <command>Dno</command></title>
    <para>
      <command>Dno</command> is a command-line tool for building
      software for Arduino and related single board computers.  It is
      intended as an alternative to the Arduino <acronym>IDE</acronym>
      for building, loading and testing Arduino software.
    </para>
    <para>
      It does not provide an editing environment. Instead, by allowing
      builds to be executed as simple commands, developers are free to
      use the editor/programming environment of their choice.
    </para>
    <para>
      It also goes beyond what the Arduino <acronym>IDE</acronym>
      offers by supporting unit testing of libraries and the creation
      of Doxygen-based documentation of code.  In short, it aims to
      support the creation of professional quality software for
      Arduino platforms.
    </para>
    <para>
      Finally it aims to be as simple to use as possible - requiring
      minimal configuration while providing maximal flexibility.
    </para>
  </preface>
  <chapter>
    <title>Features</title>
    <para>
    </para>
  </chapter>
  <chapter>
    <title>Installation</title>
      <para>
	<command>Dno</command> can be installed by downloading and
	unpacking a release tarball or by cloning from <ulink
	url="https://github.com/marcmunro/dno">github</ulink>.  Unless
	you want to hack on dno itself, installing from a tarball is
	the recommended option.
      </para>
    <sect1>
      <title>Compatibility</title>
      <para>
	<command>Dno</command> is expected to run on any Unix-like
	operating system: Linux, BSD, MacOSX.
      </para>
      <para>
	It is built using <acronym>GNU</acronym>
	<literal>autotools</literal>, so any OS supported by
	<literal>autotools</literal> should work.  It is unlikely that
	Windows(tm) will ever be supported.
      </para>
    </sect1>
    <sect1>
      <title>Dependencies</title>
      <para>
	Dno requires <command>bash</command>, <command>make</command>,
	<command>sed</command> and <command>gawk</command> in order to
	run.
      </para>
      <para>
	For building and installing <command>dno</command>,
	<command>gcc</command> is also required. 
      </para>
      <para>
	To build documentation: <command>pandoc</command>,
	<command>xsltproc</command> and the docbook xslt stylesheets
	(v4) are required.  Tarball-based installations provide
	pre-built documentation so do not need these.
      </para>
      <para>
	If you want to modify <command>dno</command>, you should also install
	<literal>autotools</literal>.
      </para>
    </sect1>
    <sect1>
      <title>Installing from a tarball</title>
      <para>
	Releases can be found in the github project releases
	directory:  <ulink
	url="https://github.com/marcmunro/dno/tree/main/releases">https://github.com/marcmunro/dno/tree/main/releases</ulink>.
      </para>
      <para>
	You can download a tarball by clicking on it and then
	finding and clicking on the "download raw file" button.
      </para>
      <para>
	To unpack the tarball (this will create a new directory called
	<literal>dno</literal>):
	<programlisting>
$ tar xvzf dno_<replaceable>VERSION</replaceable>.tgz
	</programlisting>
      </para>
      <para>
	Now <command>cd</command> to the new <literal>dno</literal>
	directory and run <command>make</command>:
      </para>
      <para>
      </para>
      <para>
      </para>
    </sect1>
    <sect1>
      <title>Installing by cloning from github</title>
      <para>
	  
      </para>
    </sect1>
  </chapter>
  <chapter>
    <title>Dno Commands</title>
    <para>
    </para>
  </chapter>
  <chapter>
    <title>The Dno Directory System</title>
    <para>
    </para>
  </chapter>
  <chapter>
    <title>Why?</title>
    <para>
    </para>
  </chapter>
  <appendix id="man_pages">
    <title><literal>dno</literal> man pages</title>
    &appendix_dno;
    &appendix_dno_bpp;
    &appendix_dno_checksize;
    &appendix_dno_checksize;
    &appendix_dno_commands_for;
    &appendix_dno_dirinfo;
    &appendix_dno_menu;
    &appendix_dno_requote;
    &appendix_BOARD_INFO;
    &appendix_BOARD_TYPE;
    &appendix_BOARD_OPTIONS;
  </appendix>
  &appendix_LICENSE;
</book>
  
